<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://puppetlabs.github.io/iac/feed.xml" rel="self" type="application/atom+xml" /><link href="https://puppetlabs.github.io/iac/" rel="alternate" type="text/html" /><updated>2020-10-14T02:16:31+00:00</updated><id>https://puppetlabs.github.io/iac/feed.xml</id><title type="html">Puppet IAC Team</title><subtitle>Team blog and list of maintained tools by and for the Puppet Infrastructure Automation Content Team.</subtitle><entry><title type="html">2020-10-09: IAC Team Status Update</title><link href="https://puppetlabs.github.io/iac/team/status/2020/10/09/status-update.html" rel="alternate" type="text/html" title="2020-10-09: IAC Team Status Update" /><published>2020-10-09T00:00:00+00:00</published><updated>2020-10-09T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/team/status/2020/10/09/status-update</id><content type="html" xml:base="https://puppetlabs.github.io/iac/team/status/2020/10/09/status-update.html">&lt;h2 id=&quot;community-contributions&quot;&gt;Community Contributions&lt;/h2&gt;

&lt;p&gt;We had a busy week and the community was very active so we’d like to thank the following people in the Puppet Community for their contributions over this past week:&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/jcpunk&quot;&gt;jcpunk&lt;/a&gt; for the folowing PRs where he resolves &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppet-lint&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yamllint&lt;/code&gt; warnings across the following repos:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-apache/pull/2066&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-apache#2066&lt;/code&gt;&lt;/a&gt;, thanks also to &lt;a href=&quot;https://github.com/igalic&quot;&gt;igalic&lt;/a&gt;, who helped get it over the line.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-mysql/pull/1327&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-mysql#1327&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-inifile/pull/414&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-inifile#414&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-motd/pull/333&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-motd#333&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-postgresql/pull/1191&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-postgresql#1191&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-firewall/pull/945&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-firewall#945&lt;/code&gt;&lt;/a&gt;: Thanks to &lt;a href=&quot;https://github.com/pellisesol&quot;&gt;pellisesol&lt;/a&gt; for ading carp protocol to :proto property.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-stdlib/pull/1133&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-stdlib#1133&lt;/code&gt;&lt;/a&gt;: Thanks to &lt;a href=&quot;https://github.com/smortex&quot;&gt;smortex&lt;/a&gt; for his fix from CHANGELOG.md.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-concat/pull/661&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-concat#661&lt;/code&gt;&lt;/a&gt;: Thanks to &lt;a href=&quot;https://github.com/seanmil&quot;&gt;seanmil&lt;/a&gt; who treats the case when no concat_fragment resources are specified.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;new-module--gem-releases&quot;&gt;New Module / Gem Releases&lt;/h2&gt;

&lt;p&gt;The following modules were released this week:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-apache&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-apache&lt;/code&gt;&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5.6.0&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://github.com/puppetlabs/puppetlabs-firewall&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-firewall&lt;/code&gt;&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2.6.0&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-exec&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-exec&lt;/code&gt;&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.8.0&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;life-of-an-intern-at-puppet&quot;&gt;Life of an intern at Puppet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/disha-maker&quot;&gt;Disha&lt;/a&gt; continues her journey at Puppet and &lt;a href=&quot;https://puppetlabs.github.io/iac/docs/life_of_intern&quot;&gt;here&lt;/a&gt; you can find the last updates of ** Life of an intern at Puppet ** .&lt;/p&gt;

&lt;h2 id=&quot;dsc&quot;&gt;DSC&lt;/h2&gt;

&lt;p&gt;With the first customers starting to use the &lt;a href=&quot;https://puppetlabs.github.io/iac/news/roadmap/2020/09/21/dsc-release.html&quot;&gt;wonderful new DSC modules&lt;/a&gt; we encountered some hurdles when directly upgrading from old DSC management options. While we’re working on a complete fix, we recommend for now to start with removing old DSC modules completely before rolling out the new. For any DSC issues, you can always find us &lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-dsc&quot;&gt;here&lt;/a&gt; ready to help!&lt;/p&gt;

&lt;h2 id=&quot;ci-improvements&quot;&gt;CI Improvements&lt;/h2&gt;

&lt;p&gt;Work continues on a solution for public on-demand acceptance tests for modules. This week saw us finishing up a fully automated deployment solution for all the involved cloud components, some light testing, and tightening up of code. If nothing goes horribly wrong, we’ll be able to share more details and a sneak-peak of the final results in the next two weeks.&lt;/p&gt;

&lt;p&gt;If you want to know about the project in person, check out the &lt;a href=&quot;https://puppet.com/blog/hacktoberfest-2020/&quot;&gt;Puppet Hacktoberfest Hackathon&lt;/a&gt; on 20 October, 2020 (GMT and PST).&lt;/p&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap-up&lt;/h2&gt;

&lt;p&gt;That’s it for this weeks update, have a great weekend everyone!&lt;/p&gt;</content><author><name>daianamezdrea</name></author><category term="team" /><category term="status" /><category term="concat" /><category term="apache" /><category term="exec" /><category term="firewall" /><category term="stdlib" /><category term="puppet_intern" /><category term="dsc" /><summary type="html">Community Contributions</summary></entry><entry><title type="html">Collecting GCP info and system metrics for Honeycomb</title><link href="https://puppetlabs.github.io/iac/development/gcp/2020/10/05/honeycomb-gcp-metrics.html" rel="alternate" type="text/html" title="Collecting GCP info and system metrics for Honeycomb" /><published>2020-10-05T00:00:00+00:00</published><updated>2020-10-05T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/development/gcp/2020/10/05/honeycomb-gcp-metrics</id><content type="html" xml:base="https://puppetlabs.github.io/iac/development/gcp/2020/10/05/honeycomb-gcp-metrics.html">&lt;p&gt;For a new and exciting project, the team is currently onboarding on &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Cloud_Platform&quot;&gt;Google Cloud Platform (GCP)&lt;/a&gt; development.
&lt;!-- This is part of a series of posts describing our journey. --&gt;
I can’t wait until I’m able to share more, but for now I can only say we’re looking at a &lt;a href=&quot;http://sinatrarb.com/intro.html&quot;&gt;Sinatra&lt;/a&gt;-hosted Ruby API server.
To gain a better understanding how the service is performing, we want to collect some “traditional” metrics.
Since we’re already using honeycomb for tracing &lt;a href=&quot;/iac/module/development/2020/03/30/debugging-unit-tests-with-honeycomb.html&quot;&gt;tests&lt;/a&gt; and &lt;a href=&quot;https://docs.honeycomb.io/getting-data-in/ruby/beeline/#sinatra&quot;&gt;API calls&lt;/a&gt;, looking into honeycomb for more was my first choice.
Most of the content here is based off the “Getting Started With Honeycomb Metrics” whitepaper at [https://www.honeycomb.io/white-papers/], made specific to Ruby and GCP.&lt;/p&gt;

&lt;h2 id=&quot;static-runtime-information&quot;&gt;Static runtime information&lt;/h2&gt;

&lt;p&gt;The first thing to collect is some static information about the container runtime hosting the current process.
We’re using &lt;a href=&quot;https://cloud.google.com/run/docs&quot;&gt;Cloud Run&lt;/a&gt; as our primary deployment infrastructure for the API services, so this is our first stop.
The &lt;a href=&quot;https://cloud.google.com/compute/docs/storing-retrieving-metadata&quot;&gt;metadata server&lt;/a&gt; provides details about the container instance as described in “&lt;a href=&quot;https://cloud.google.com/run/docs/reference/container-contract#metadata-server&quot;&gt;Container instance metadata server&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;The GCP ruby gems provide &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google::Cloud.env&lt;/code&gt; to access the metadata server.
Here is a pruned example of how to add metadata to all spans for easy filtering:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'honeycomb-beeline'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;service_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'backend'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Cloud&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gcp.project_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;project_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gcp.instance_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lookup_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'instance'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gcp.instance_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instance_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;region_result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lookup_metadata&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;instance&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;region&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;region&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;region_result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gcp.instance_region'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;region&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gcp.instance_zone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instance_zone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gcp.instance_machine_type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instance_machine_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gcp.instance_tags'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instance_tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gcp.knative_service_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;knative_service_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gcp.knative_service_revision'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;knative_service_revision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Put this code somewhere that is loaded on app start up.
For rack-based frameworks like sinatra this is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config.ru&lt;/code&gt;, where we include this code through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;require&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;At the same time, we can also add private configuration flags from our service, to track their influence.
For example, to capture whether &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FLAG_ENABLED&lt;/code&gt; has been set in the container’s variables:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'flag_enabled'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'FLAG_ENABLED'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'true'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The attributes show up in the trace/span sidebar and can be used in any query:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-10-05-honeycomb-gcp-metrics/gcp_attributes.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;dynamic-data&quot;&gt;Dynamic Data&lt;/h2&gt;

&lt;p&gt;For the actual system metrics, like CPU and memory usage, &lt;a href=&quot;https://github.com/honeycombio/libhoney-rb&quot;&gt;libhoney&lt;/a&gt; offers builders and &lt;a href=&quot;https://docs.honeycomb.io/getting-data-in/ruby/sdk/#advanced-usage-dynamic-fields&quot;&gt;dynamic fields&lt;/a&gt; (&lt;a href=&quot;https://www.rubydoc.info/gems/libhoney/Libhoney%2FClient:add_dynamic_field&quot;&gt;API docs&lt;/a&gt;).
Dynamic fields get evaluated at the start of each span[&lt;a href=&quot;https://github.com/honeycombio/beeline-ruby/blob/15341f01740001acbc1f2748e68cbe380bfc3f7f/lib/honeycomb/span.rb#L31&quot;&gt;1&lt;/a&gt;] and added to the fields sent to Honeycomb.&lt;/p&gt;

&lt;p&gt;To access the current &lt;a href=&quot;http://en.wikipedia.org/wiki/Resident_set_size&quot;&gt;Resident Set Size&lt;/a&gt; (RSS, “memory in use”) we use the &lt;a href=&quot;https://github.com/schneems/get_process_mem&quot;&gt;get_process_mem gem&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'get_process_mem'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_dynamic_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'global.memory_inuse_bytes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GetProcessMem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The total lifetime of the process can be calculated as the difference from the start time to now:&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Honeycomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;libhoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_dynamic_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'global.process_uptime_seconds'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After a few minutes of the heartbeat API call:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-10-05-honeycomb-gcp-metrics/first_results.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;closing-notes&quot;&gt;Closing Notes&lt;/h2&gt;

&lt;p&gt;This post was written while implementing the first stab at collecting metrics.
As we continue to improve our understanding of the capabilities and limitations of GCP, I expect we will have to revisit the exact metrics collected.
For example, data written to disk in Cloud Run is stored in RAM and also counted against the service’s quota.
This sounds like something to keep an eye on eventually.&lt;/p&gt;

&lt;p&gt;Honeycomb recommends keeping system metrics in a separate dataset from application events.
During development we currently have very little traffic on the service, so for simplicities sake, we keep everything global and attached to all events.
We’ll have to revisit this once we get more traffic on the service.&lt;/p&gt;</content><author><name>dev_el_ops</name></author><category term="development" /><category term="gcp" /><category term="honeycomb" /><category term="observability" /><category term="metadata" /><category term="metrics" /><summary type="html">For a new and exciting project, the team is currently onboarding on Google Cloud Platform (GCP) development. I can’t wait until I’m able to share more, but for now I can only say we’re looking at a Sinatra-hosted Ruby API server. To gain a better understanding how the service is performing, we want to collect some “traditional” metrics. Since we’re already using honeycomb for tracing tests and API calls, looking into honeycomb for more was my first choice. Most of the content here is based off the “Getting Started With Honeycomb Metrics” whitepaper at [https://www.honeycomb.io/white-papers/], made specific to Ruby and GCP.</summary></entry><entry><title type="html">2020-10-02: IAC Team Status Update</title><link href="https://puppetlabs.github.io/iac/team/status/2020/10/02/status-update.html" rel="alternate" type="text/html" title="2020-10-02: IAC Team Status Update" /><published>2020-10-02T00:00:00+00:00</published><updated>2020-10-02T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/team/status/2020/10/02/status-update</id><content type="html" xml:base="https://puppetlabs.github.io/iac/team/status/2020/10/02/status-update.html">&lt;p&gt;Hello everyone!&lt;/p&gt;

&lt;p&gt;The IAC Team had a lot of activity this past week.&lt;/p&gt;

&lt;p&gt;Here’s a brief summary:&lt;/p&gt;

&lt;h2 id=&quot;community-contributions&quot;&gt;Community Contributions&lt;/h2&gt;

&lt;p&gt;We’d like to thank the following people in the Puppet Community for their contributions over this past week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-apache/pull/2070&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-apache#2070&lt;/code&gt;&lt;/a&gt;: Thanks &lt;a href=&quot;https://github.com/DLeich&quot;&gt;DLeich&lt;/a&gt; for fixing up some non-ASCII characters in the codebase that was causing issues in Onceover.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-apache/pull/2069&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-apache#2069&lt;/code&gt;&lt;/a&gt;: Thanks &lt;a href=&quot;https://github.com/altmas5&quot;&gt;altmas5&lt;/a&gt; for the typo fixes!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-haproxy/pull/442&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-haproxy#442&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;https://github.com/pkaroluk&quot;&gt;pkaroluk&lt;/a&gt; put up a fix ensuring that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;haproxy.cfg&lt;/code&gt; is correctly structured when using the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpchk&lt;/code&gt; in conjunction with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http-check&lt;/code&gt; directive. Many thanks!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-kubernetes/pull/443&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-kubernetes#443&lt;/code&gt;&lt;/a&gt;: We can now specifically set the advertise address for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;etcd&lt;/code&gt; now thanks to &lt;a href=&quot;https://github.com/faxm0dem&quot;&gt;faxm0dem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-postgresql/pull/1195&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-postgresql#1195&lt;/code&gt;&lt;/a&gt;: Thank you &lt;a href=&quot;https://github.com/osijan&quot;&gt;osijan&lt;/a&gt; for adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hostgssenc&lt;/code&gt; as an additional option in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$type&lt;/code&gt; parameter within &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postgresql::server::pg_hba_rule&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-stdlib/pull/1130&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-stdlib#1130&lt;/code&gt;&lt;/a&gt;: A very useful additional function for parsing HOCON files from &lt;a href=&quot;https://github.com/reidmv&quot;&gt;reidmv&lt;/a&gt; - thanks for the new function!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-stdlib/pull/1129&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-stdlib#1129&lt;/code&gt;&lt;/a&gt;: Thank you &lt;a href=&quot;https://github.com/b4ldr&quot;&gt;b4ldr&lt;/a&gt; for the new types added to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stdlib::Ensure::File&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-stdlib/pull/1128&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-stdlib#1128&lt;/code&gt;&lt;/a&gt;: …and again from &lt;a href=&quot;https://github.com/b4ldr&quot;&gt;b4ldr&lt;/a&gt; - this is a great addition: we now have types aligned with the IANA port category definitions, for easier comprehension.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-apache/pull/2071&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-apache#2071&lt;/code&gt;&lt;/a&gt;: Thanks to &lt;a href=&quot;https://github.com/creativefre&quot;&gt;creativefre&lt;/a&gt; for the fix in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apache::mod::fcgid&lt;/code&gt; to make it compatible on RHEL 8.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;new-module--gem-releases&quot;&gt;New Module / Gem Releases&lt;/h2&gt;

&lt;p&gt;The following modules were released this week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-stdlib&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-stdlib&lt;/code&gt;&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6.5.0&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-docker&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-docker&lt;/code&gt;&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3.12.0&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-postgresql&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-postgresql&lt;/code&gt;&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6.8.0&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://github.com/puppetlabs/puppetlabs-mysql&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-mysql&lt;/code&gt;&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10.7.1&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://github.com/puppetlabs/puppetlabs-package&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-package&lt;/code&gt;&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1.3.0&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ci-improvements&quot;&gt;CI Improvements&lt;/h2&gt;

&lt;p&gt;As mentioned in the last week’s status update, we are currently under development of a solution that would improve the CI experience both for us as the maintainers of the modules and for everyone else in the community. One of the goals of this activity is to allow you, as the contributors, to see if any code changes affect module functionality across the supported platforms.
At the moment we depend on Travis and Docker containers to offer you a part of this experience. The solution we are working on will harness the power of different cloud providers to allow acceptance test runs on more platforms with Puppet Litmus.&lt;/p&gt;

&lt;h2 id=&quot;life-of-an-intern-at-puppet&quot;&gt;Life of an intern at Puppet&lt;/h2&gt;

&lt;p&gt;As you all know already, we have our lovely new intern, &lt;a href=&quot;https://github.com/disha-maker&quot;&gt;Disha&lt;/a&gt; who is sharing her experience with the team on the &lt;a href=&quot;/iac/docs/life_of_intern.html&quot;&gt;Life of an intern at Puppet&lt;/a&gt; page. Please follow her blog to keep up to date with her activity here.&lt;/p&gt;

&lt;h2 id=&quot;everyonecancontribute-podcast&quot;&gt;#everyonecancontribute podcast&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DavidS&quot;&gt;DavidS&lt;/a&gt; participated in the &lt;a href=&quot;https://everyonecancontribute.com/&quot;&gt;#everyonecancontribute&lt;/a&gt; podcast (&lt;a href=&quot;https://www.youtube.com/watch?v=6c0Vfn8BIM4&quot;&gt;recording&lt;/a&gt; on Wednesday where we (amongst other things) tried out the &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;gitlab&lt;/a&gt; integration of &lt;a href=&quot;https://www.gitpod.io/&quot;&gt;gitpod.io&lt;/a&gt;, which provides a fully online hosted VSCode instance to code in any browser.
A lot of things just work out of the box, and we even got some of the &lt;a href=&quot;https://puppet-vscode.github.io/&quot;&gt;Puppet VSCode extension&lt;/a&gt; to work.
Find the full writeup by &lt;a href=&quot;https://github.com/dnsmichi&quot;&gt;@dnsmichi&lt;/a&gt;’s writeup &lt;a href=&quot;https://everyonecancontribute.com/post/2020-09-30-kaeffchen-20-gitpod/&quot;&gt;online&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap-up&lt;/h2&gt;

&lt;p&gt;That’s it for this weeks update, have a great weekend everyone!&lt;/p&gt;

&lt;p&gt;Thank you for all your contributions and support!&lt;/p&gt;</content><author><name>carabasdaniel</name></author><category term="team" /><category term="status" /><category term="apache" /><category term="haproxy" /><category term="kubernetes" /><category term="docker" /><category term="stdlib" /><category term="postgresql" /><category term="mysql" /><category term="package" /><category term="ci" /><summary type="html">Hello everyone!</summary></entry><entry><title type="html">2020-09-25: IAC Team Status Update</title><link href="https://puppetlabs.github.io/iac/team/status/2020/09/25/status-update.html" rel="alternate" type="text/html" title="2020-09-25: IAC Team Status Update" /><published>2020-09-25T00:00:00+00:00</published><updated>2020-09-25T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/team/status/2020/09/25/status-update</id><content type="html" xml:base="https://puppetlabs.github.io/iac/team/status/2020/09/25/status-update.html">&lt;h2 id=&quot;community-contributions&quot;&gt;Community Contributions&lt;/h2&gt;

&lt;p&gt;We’d like to thank the following people in the Puppet Community for their contributions over this past week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Thanks to &lt;a href=&quot;https://github.com/jcpunk&quot;&gt;jcpunk&lt;/a&gt; for the tidy up effort to resolve &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppet-lint&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yamllint&lt;/code&gt; warnings across the following repos:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-concat/pull/660&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-concat#660&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-kubernetes/pull/438&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-kubernetes#438&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-stdlib/pull/1127&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-stdlib#1127&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-translate/pull/93&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-translate#93&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-postgresql/pull/1187&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-postgresql#1187&lt;/code&gt;&lt;/a&gt;: Thanks to &lt;a href=&quot;https://github.com/ekohl&quot;&gt;ekohl&lt;/a&gt; for the enhancement that allows you to remove config entries by setting them to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;undef&lt;/code&gt; - a very useful addition!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppet-strings/pull/252&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-strings#252&lt;/code&gt;&lt;/a&gt;: Thanks to &lt;a href=&quot;https://github.com/kozl&quot;&gt;kozl&lt;/a&gt; for the various enhancements and fixes in this. Check out &lt;a href=&quot;https://github.com/puppetlabs/puppet-strings/pull/252#issue-487952635&quot;&gt;the description&lt;/a&gt; for more details.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;new-module--gem-releases&quot;&gt;New Module / Gem Releases&lt;/h2&gt;

&lt;p&gt;The following modules were released this week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-accounts&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-accounts&lt;/code&gt;&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6.3.0&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;semi-automated-blog-writing&quot;&gt;Semi-Automated Blog Writing&lt;/h2&gt;

&lt;p&gt;Well, the way the world is going, everything will be automated soon, won’t it?
This week’s blog post was partially written by a new script that will compile:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The modules released since last week’s update&lt;/li&gt;
  &lt;li&gt;The awesome contributions from you, in the Community, that have landed in to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs:main&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are sections that are there every week and the previous process to compiling everything in to Markdown, was a becoming a tedious, manual one.
So like all repetitive, manual stuff, we automated it! :smiley:&lt;/p&gt;

&lt;p&gt;If you’re interested in how it all works, check out &lt;a href=&quot;https://github.com/puppetlabs/iac/pull/114&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iac#114&lt;/code&gt;&lt;/a&gt; and/or the &lt;a href=&quot;https://github.com/puppetlabs/iac/tree/master/bin/blog_tools&quot;&gt;README&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And before I continue I would just like to give a personal thanks to our very own &lt;a href=&quot;https://github.com/sanfrancrisko&quot;&gt;Ciaran&lt;/a&gt; for getting this up and working, cutting at least an hour of work from the writing of this post.&lt;/p&gt;

&lt;h2 id=&quot;ci-improvements&quot;&gt;CI Improvements&lt;/h2&gt;

&lt;p&gt;Over the last few months or so work has been put in to improve our CI coverage with this short message from our very own &lt;a href=&quot;https://github.com/carabasdaniel&quot;&gt;Daniel Carabas&lt;/a&gt; explaining more:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The IAC Team is currently working on a CI improvement that will increase the testing coverage across all our supported modules and allow contributors to check and run unit and acceptance tests on more platforms. Please look forward to more details about our improved CI in the upcoming weeks.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;new-blogs&quot;&gt;New Blogs&lt;/h2&gt;

&lt;p&gt;We’ve got several new blog posts out for your viewing pleasure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First from &lt;a href=&quot;https://github.com/michaeltlombardi&quot;&gt;Michael Lombardi&lt;/a&gt; we have an excellent blog which (spoiler alert!) announces the official release of our brand new module &lt;a href=&quot;https://github.com/puppetlabs/Puppet.Dsc&quot;&gt;Puppet.Dsc&lt;/a&gt;! Please check it out &lt;a href=&quot;/iac/news/roadmap/2020/09/21/dsc-release.html&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Next from &lt;a href=&quot;https://github.com/adrianiurca&quot;&gt;Adrian Iurca&lt;/a&gt; we have a lovely blog post detailing some important changes that were recently made to the &lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-docker&quot;&gt;docker&lt;/a&gt; module. Just click the following link to take a &lt;a href=&quot;/iac/docker/development/2020/09/23/docker-params-change-detection.html&quot;&gt;look&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Finally from this week onwards, Disha’s blog posts are in a new, dedicated section of our site called &lt;a href=&quot;https://puppetlabs.github.io/iac/docs/life_of_intern&quot;&gt;Life as an Intern at Puppet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>david22swan</name></author><category term="team" /><category term="status" /><category term="concat" /><category term="kubernetes" /><category term="stdlib" /><category term="translate" /><category term="postgresql" /><category term="strings" /><category term="accounts" /><summary type="html">Community Contributions</summary></entry><entry><title type="html">Docker params change detection</title><link href="https://puppetlabs.github.io/iac/docker/development/2020/09/23/docker-params-change-detection.html" rel="alternate" type="text/html" title="Docker params change detection" /><published>2020-09-23T00:00:00+00:00</published><updated>2020-09-23T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/docker/development/2020/09/23/docker-params-change-detection</id><content type="html" xml:base="https://puppetlabs.github.io/iac/docker/development/2020/09/23/docker-params-change-detection.html">&lt;h2 id=&quot;docker-params-change-detection&quot;&gt;Docker params change detection&lt;/h2&gt;

&lt;p&gt;The problem was reported by a client with the ticket &lt;a href=&quot;https://tickets.puppetlabs.com/browse/MODULES-10734&quot;&gt;MODULES-10734&lt;/a&gt;. After analysis, we discovered that we don’t have parameter change detection mechanisms. In this blog post, we try to explain the problem in detail with examples.&lt;/p&gt;

&lt;p&gt;An interesting behaviour was present in docker::run component. The problem was that if any parameter was added/modified/removed puppet agent would only apply the change only if you stopped, removed the container manually and reapplied the manifest, forcing a new container creation.&lt;/p&gt;

&lt;p&gt;The solution was to create a new function that detects if at least one parameter is changed. The detection mechanism is based on the check between parameter values from the manifest file and correspondent field from the docker inspect object of the currently running container. The solution is present in the 3.11.0 version.&lt;/p&gt;

&lt;p&gt;So now let’s see how the problem can be reproduced by using version &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;= 3.10.2&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;1-install-puppetlabsdocker-module&quot;&gt;1. install puppetlabs/docker module&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt; puppet module &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;puppetlabs/docker &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; 3.10.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-apply-this-manifest&quot;&gt;2. apply this manifest:&lt;/h3&gt;

&lt;div class=&quot;language-puppet highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'docker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;docker::run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'servercore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;image&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'hello-world:linux'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;restart&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'always'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;net&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$facts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'os'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'windows'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'nat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;default&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bridge'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-check-the-image-tag-by-running-this-command&quot;&gt;3. check the image tag by running this command:&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt; docker inspect &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ .Config.Image }}&quot;&lt;/span&gt; servercore
&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt; hello-world:linux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-change-the-image-tag-from-hello-worldlinux-to-hello-worldlatest-and-reapply-the-manifest&quot;&gt;4. change the image tag from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello-world:linux&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello-world:latest&lt;/code&gt; and reapply the manifest.&lt;/h3&gt;

&lt;p&gt;The manifest should look like this:&lt;/p&gt;

&lt;div class=&quot;language-puppet highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'docker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;docker::run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'servercore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;image&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'hello-world:latest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;restart&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'always'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;net&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$facts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'os'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'windows'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'nat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;default&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bridge'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;… and now check if the change was applied&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt; docker inspect &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ .Config.Image }}&quot;&lt;/span&gt; servercore
&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt; hello-world:linux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so… something is wrong, the tag was not changed to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello-world:latest&lt;/code&gt;. If we want to apply this change we need to do a few more steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;stop the container: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker stop servercore&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;remove the container: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker rm servercore&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;reapply the manifest detailed above: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppet apply &amp;lt;manifest_file_name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In conclusion in the puppetlabs/docker module versions &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;= 3.10.2 &lt;/code&gt;the parameter change is not detected. If we want to change some parameters for the same container, the puppet agent will not apply these changes for us until we delete the container manually.
Using the latest versions(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;=3.11.0&lt;/code&gt;) this problem is resolved by having the parameter detection mechanism implemented for the most important parameters such as image, volumes and ports.
Also please take a look at the &lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-docker/pull/648&quot;&gt;solution&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Kind regards,
&lt;a href=&quot;https://github.com/adrianiurca&quot;&gt;Adrian Iurca&lt;/a&gt;&lt;/p&gt;</content><author><name>adrianiurca</name></author><category term="docker" /><category term="development" /><category term="bugfix" /><category term="docker" /><category term="personal" /><summary type="html">Docker params change detection</summary></entry><entry><title type="html">DSC + Puppet: Arrived!</title><link href="https://puppetlabs.github.io/iac/news/roadmap/2020/09/21/dsc-release.html" rel="alternate" type="text/html" title="DSC + Puppet: Arrived!" /><published>2020-09-21T00:00:00+00:00</published><updated>2020-09-21T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/news/roadmap/2020/09/21/dsc-release</id><content type="html" xml:base="https://puppetlabs.github.io/iac/news/roadmap/2020/09/21/dsc-release.html">&lt;p&gt;Earlier this year, we &lt;a href=&quot;https://puppetlabs.github.io/iac/news/roadmap/2020/03/30/dsc-announcement.html&quot;&gt;announced an upcoming project&lt;/a&gt; to drastically improve the story for using DSC Resources with Puppet.
Today, we’re announcing the general availability of that project!&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/puppetlabs/Puppet.Dsc&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Puppet.Dsc&lt;/code&gt; PowerShell module&lt;/a&gt; is now available on the &lt;a href=&quot;https://www.powershellgallery.com/packages/Puppet.Dsc&quot;&gt;PowerShell Gallery&lt;/a&gt;;
furthermore, an initial batch of &lt;strong&gt;twenty-six&lt;/strong&gt; PowerShell modules with DSC Resources have been Puppetized and &lt;a href=&quot;https://forge.puppet.com/dsc&quot;&gt;published to the Forge&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;We picked several of the most-downloaded modules with DSC Resources released in the last year to start with, but in the coming weeks you should find &lt;em&gt;everything&lt;/em&gt; available on the PowerShell Gallery up on the Forge!&lt;/p&gt;

&lt;p&gt;But today, in addition to sharing this news, I want to go into a bit more detail, both with what’s going on under the hood and with how you can use these auto-generated modules.&lt;/p&gt;

&lt;h3 id=&quot;installing-the-modules&quot;&gt;Installing the Modules&lt;/h3&gt;

&lt;p&gt;If you just want to get your hands on the PowerShell module to read the help and experiment on your own, you can install it like any other PowerShell module:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;Install-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Puppet.Dsc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Import-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Puppet.Dsc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-Command&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Puppet.Dsc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-Help&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;New-PuppetDscModule&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ShowWindow&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Some of the functions from the PowerShell module rely on the &lt;a href=&quot;https://puppet.com/docs/pdk/1.x/pdk.html&quot;&gt;Puppet Development Kit (PDK)&lt;/a&gt; being installed;
we suggest using &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt; to do so, but you can also &lt;a href=&quot;https://puppet.com/try-puppet/puppet-development-kit/&quot;&gt;manually download and install&lt;/a&gt; if you prefer.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;choco &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;pdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to do the same sort of thing with one of the Puppetized modules from the forge, you can install them and treat them just like any other Puppet module:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# For example, installing the Puppetized ComputerManagementDsc module manually:&lt;/span&gt;
puppet module &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;dsc-computermanagementdsc &lt;span class=&quot;nt&quot;&gt;--Version&lt;/span&gt; 8.4.0-0-0
&lt;span class=&quot;c&quot;&gt;# Or via r10k / Code Manager / Bolt:&lt;/span&gt;
mod &lt;span class=&quot;s1&quot;&gt;'dsc-computermanagementdsc'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'8.4.0-0-0'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;puppetizing-a-powershell-module&quot;&gt;Puppetizing a PowerShell module&lt;/h2&gt;

&lt;p&gt;So, you want to turn a PowerShell module with DSC Resources into a Puppet module?
You can do this with a single command:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# If you run this command without the PassThru flag it returns nothing to the output stream.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Any conversion errors will be in the error stream, as usual.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# If you'd like a deeper look at what it's doing, try running it with the Verbose flag.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-PuppetDscModule&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-PowerShellModuleName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ComputerManagementDsc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-PassThru&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately, the output from running it isn’t all that exciting:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-09-21-dsc-release/new-puppetdscmodule.png&quot; alt=&quot;Output from a PowerShell console showing the running of the command above as well as the return output, which is the folder object representing the new Puppet module on disk&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Behind the scenes, the command:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Uses the &lt;a href=&quot;https://puppet.com/docs/pdk/1.x/pdk.html&quot;&gt;PDK&lt;/a&gt; to create a new Puppet module&lt;/li&gt;
  &lt;li&gt;Searches the &lt;a href=&quot;https://www.powershellgallery.com&quot;&gt;PowerShell Gallery&lt;/a&gt; for the ComputerManagementDsc module and vendor it into the new Puppet module&lt;/li&gt;
  &lt;li&gt;Converts each of the DSC Resources from the vendored PowerShell module into a Puppet Resource API type and provider&lt;/li&gt;
  &lt;li&gt;Updates the Puppet module’s metadata and documentation based on the PowerShell module.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;At this time, for best results we strongly recommend you run the command with administrator privileges in a Windows PowerShell 5.1 session.
While it &lt;em&gt;does&lt;/em&gt; work without administrator privileges, the function cannot fully map nested CIM instances without administrator privileges.
For more information on this process, check out the &lt;a href=&quot;https://github.com/puppetlabs/Puppet.Dsc/blob/main/docs/about_Puppetization.md&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;about_Puppetization&lt;/code&gt; HelpFile&lt;/a&gt; via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Get-Help&lt;/code&gt; for a more in-depth documentation of this process.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;using-puppetized-modules&quot;&gt;Using puppetized modules&lt;/h2&gt;

&lt;p&gt;On the one hand, there’s not much to say about using the Puppetized modules with DSC Resources;
you use them &lt;em&gt;precisely&lt;/em&gt; like any other Puppet module, after all.
On the other hand, there’s some strong utility worth going over in more detail you may or may not be aware of!&lt;/p&gt;

&lt;p&gt;To get the most value from your workflow, we &lt;strong&gt;strongly&lt;/strong&gt; recommend you author your manifests that include Puppetized DSC Resources in &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt; with the &lt;a href=&quot;https://puppet-vscode.github.io/&quot;&gt;Puppet extension&lt;/a&gt; enabled.&lt;/p&gt;

&lt;p&gt;When we open a file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.pp&lt;/code&gt; to edit, the Puppet extension automatically begins to load;
once this is finished, we have access to a ton of useful authoring support, including intellisense.&lt;/p&gt;

&lt;p&gt;For example, if we’ve installed the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;computermanagementdsc&lt;/code&gt; Puppet module, we need only type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dsc_execution&lt;/code&gt; before IntelliSense kicks in and helps us out:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-09-21-dsc-release/intellisense-resource.png&quot; alt=&quot;A VSCode window showing the text 'dsc_execution' has raised a tooltip which lists multiple possible matches, including dsc_powershellexecutionpolicy, and to the right it shows the help information for this resource.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note that it tells us not just what available resources might match, it also displays the available documentation for each resource.&lt;/p&gt;

&lt;p&gt;We also get IntelliSense for each property we want to pass, too;
again, this doesn’t just show the available options but also includes any available documentation for each property.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-09-21-dsc-release/intellisense-property.png&quot; alt=&quot;A VSCode window showing the text 'dsc' inside a Puppet resource declaration for dsc_powershellexecutionpolicy, with a tooltip listing the possible properties, including dsc_executionpolicy and dsc_executionpolicyscope; as before, the help information (now including valid values) is to the right.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can also review the documentation for a property by hovering over it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-09-21-dsc-release/docs-property.png&quot; alt=&quot;A VSCode window showing an empty declaration for 'dsc_executionpolicy' with the mouse hovering over that key, displaying a tooltip which includes the documentation and valid values for the property.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Where this combination really begins to sing is when you’ve begun authoring a manifest and something goes wrong.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-09-21-dsc-release/problems.png&quot; alt=&quot;A VSCode window showing a fully defined manifest with markings to highlight issues.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The image above shows that the file name in the left-hand pane has changed colors and is now red.
It also underscores two entries in the manifest that VSCode has highlighted - one with orange underlining, indicating a warning, and one with red underlining, indicating an error.
Finally, down in the bottom left corner it highlights the problem symbols for errors and warnings, both of which display a count of one.&lt;/p&gt;

&lt;p&gt;VSCode (via the extension) knows &lt;em&gt;something&lt;/em&gt; is wrong with our manifest;
we can click on those symbols to bring up the Problems Pane and investigate:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-09-21-dsc-release/problems-pane.png&quot; alt=&quot;A VSCode window displaying the Problems Pane with two entries&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This tells us there’s a warning about the indentation of a hash rocket and some sort of syntax error preventing the extension from parsing line 3.&lt;/p&gt;

&lt;p&gt;A quick look at the code tells us that we’re missing a comma in the resource declaration on line 2, and as soon as we add that comma in we get confirmation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-09-21-dsc-release/problems-added-comma.png&quot; alt=&quot;A VSCode window displaying the Problems Pane with only one warning&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All that remains now is the formatting issue.
Luckily, VSCode is able to automatically handle this for us via the &lt;em&gt;Format Document&lt;/em&gt; command:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-09-21-dsc-release/format-document-option.png&quot; alt=&quot;A VSCode window displaying the right-click menu over the manifest, highlighting the 'Format Document' command with a hotkey combination of 'Shift+Alt+F'&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Which we can see does in fact move the hash rocket and resolve our last problem:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/iac/assets/2020-09-21-dsc-release/manifest-fixed.png&quot; alt=&quot;A VSCode window displaying the manifest with no issues or warnings, the hash rocket moved appropriately to ensure preferred formatting for the manifest.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We’re ready to apply this manifest!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;puppet apply ./example.pp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Only… there was a problem;
without reading the documentation for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dsc_executionpolicyscope&lt;/code&gt; thoroughly enough, we specified &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Machine&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MachinePolicy&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;Puppet gives us back a pretty good error message though:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: Parameter dsc_executionpolicyscope failed on Dsc_powershellexecutionpolicy[[OPS-213]]: dsc_powershellexecutionpolicy.dsc_executionpolicyscope expects a match for Enum['CurrentUser', 'LocalMachine', 'MachinePolicy', 'Process', 'UserPolicy'], got 'Machine'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We get an explicit list of the allowed values &lt;em&gt;before&lt;/em&gt; it tries to invoke DSC with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Set&lt;/code&gt; action.
This is unlike our prior implementation in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-dsc_lite&lt;/code&gt;, which has no way of knowing whether the values you’ve provided are correct.&lt;/p&gt;

&lt;p&gt;Once we correct our manifest to specify &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LocalMachine&lt;/code&gt; and re-run the command, we get something else:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Notice: Compiled catalog for michael.lombardi-pf12aa84 in environment workstation_production in 1.04 seconds
Notice: /Stage[main]/Main/Dsc_powershellexecutionpolicy[[OPS-213]]/dsc_executionpolicy: dsc_executionpolicy changed 'Unrestricted' to 'RemoteSigned'
Notice: dsc_powershellexecutionpolicy[{:name=&amp;gt;&quot;[OPS-213]&quot;, :dsc_executionpolicyscope=&amp;gt;&quot;LocalMachine&quot;}]: Updating: Finished in 0.809555 seconds
Notice: Applied catalog in 1.68 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This highlights a change from both of our prior implementations:
you now get &lt;em&gt;property-by-property&lt;/em&gt; reporting for DSC Resources when using Puppet!
This implementation knows not just &lt;em&gt;that&lt;/em&gt; a DSC Resource was out of sync and therefore applied, but it can tell you exactly which properties were out of sync, what their value was, and what it has been set to in this run.&lt;/p&gt;

&lt;p&gt;This brings DSC Resources in line with all of the rest of the resources you manage with Puppet and drastically improves the usefulness of your run reports!&lt;/p&gt;

&lt;h2 id=&quot;coming-up&quot;&gt;Coming Up&lt;/h2&gt;

&lt;p&gt;This wave of converted DSC Resources and the release of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Puppet.Dsc&lt;/code&gt; module to the PowerShell Gallery is not the &lt;em&gt;last&lt;/em&gt; step of our support for using DSC with Puppet, just the initial step.&lt;/p&gt;

&lt;p&gt;Over the coming weeks we’re going to be looking to you for feedback and incorporating it as fast as we can manage.&lt;/p&gt;

&lt;p&gt;We’re also moving towards automatically Puppetizing &lt;em&gt;every&lt;/em&gt; PowerShell module with DSC Resources on the Gallery.
If there’s a module you want to use that isn’t yet published under our &lt;a href=&quot;https://forge.puppet.com/dsc&quot;&gt;&lt;strong&gt;dsc&lt;/strong&gt; namespace on the Forge&lt;/a&gt;, let us know in &lt;a href=&quot;https://slack.puppet.com/&quot;&gt;Slack&lt;/a&gt; or by &lt;a href=&quot;mailto:dsc@puppet.com&quot;&gt;emailing us&lt;/a&gt; and we’ll publish it as soon as we can!&lt;/p&gt;

&lt;p&gt;In the long run, we plan to get some nightly builds in place to ensure that there’s never more than a 24 hour lag between when a PowerShell module with DSC Resources is published (new or merely updated) to the Gallery and when that same module is Puppetized and published to the Forge.&lt;/p&gt;

&lt;p&gt;We hope to hear from you soon!&lt;/p&gt;</content><author><name>michaeltlombardi</name></author><category term="news" /><category term="roadmap" /><category term="powershell" /><category term="dsc" /><category term="windows" /><category term="forge" /><summary type="html">Earlier this year, we announced an upcoming project to drastically improve the story for using DSC Resources with Puppet. Today, we’re announcing the general availability of that project!</summary></entry><entry><title type="html">18th September 2020: IAC Team Status Update</title><link href="https://puppetlabs.github.io/iac/team/status/2020/09/18/status-update.html" rel="alternate" type="text/html" title="18th September 2020: IAC Team Status Update" /><published>2020-09-18T00:00:00+00:00</published><updated>2020-09-18T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/team/status/2020/09/18/status-update</id><content type="html" xml:base="https://puppetlabs.github.io/iac/team/status/2020/09/18/status-update.html">&lt;p&gt;Hello folks!
Hope this Friday finds you all well?
Here’s an update from the IAC Team for the week that was:&lt;/p&gt;

&lt;h2 id=&quot;community-contributions&quot;&gt;Community Contributions&lt;/h2&gt;

&lt;p&gt;We’d like to thank the following people from the Community for their contributions this week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jcpunk&quot;&gt;jcpunk&lt;/a&gt; has been busy cleaning up code in multiple repos to resolve warnings from &lt;a href=&quot;https://github.com/rodjek/puppet-lint&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppet-lint&lt;/code&gt;&lt;/a&gt;:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-translate/pull/93&quot;&gt;puppetlabs-translate#93&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-concat/pull/660&quot;&gt;puppetlabs-concat#660&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-stdlib/pull/1126&quot;&gt;puppetlabs-stdlib#1126&lt;/a&gt;: &lt;a href=&quot;https://github.com/b4ldr&quot;&gt;b4ldr&lt;/a&gt; added this enhancement to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-stdlib&lt;/code&gt; that adds a new data size type alias&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you &lt;a href=&quot;https://github.com/jcpunk&quot;&gt;jcpunk&lt;/a&gt; and &lt;a href=&quot;https://github.com/b4ldr&quot;&gt;b4ldr&lt;/a&gt; for your contributions!&lt;/p&gt;

&lt;h2 id=&quot;module-releases&quot;&gt;Module Releases&lt;/h2&gt;

&lt;p&gt;The following modules were released this week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://forge.puppet.com/puppetlabs/apt&quot;&gt;puppetlabs-apt&lt;/a&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v7.6.0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://forge.puppet.com/puppetlabs/haproxy&quot;&gt;puppetlabs-haproxy&lt;/a&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4.3.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bolt-smoke-tests&quot;&gt;Bolt Smoke Tests&lt;/h2&gt;

&lt;p&gt;We’d like to thank the &lt;a href=&quot;https://github.com/puppetlabs/bolt&quot;&gt;Bolt&lt;/a&gt; team, and specifically &lt;a href=&quot;https://github.com/lucywyman&quot;&gt;lucywyman&lt;/a&gt; for getting &lt;a href=&quot;https://github.com/puppetlabs/bolt/pull/2164&quot;&gt;a smoke test pipeline&lt;/a&gt; up and running that verifies Bolt releases with Litmus!&lt;/p&gt;

&lt;p&gt;Also, thanks to &lt;a href=&quot;https://github.com/jpogran&quot;&gt;jpogran&lt;/a&gt; and &lt;a href=&quot;https://github.com/nicklewis&quot;&gt;nicklewis&lt;/a&gt; for quickly jumping on &lt;a href=&quot;https://github.com/puppetlabs/bolt/issues/2188&quot;&gt;bolt#2188&lt;/a&gt;, discovered by &lt;a href=&quot;https://github.com/daianamezdrea&quot;&gt;daianamezdrea&lt;/a&gt;.
Very much appreciated! :)&lt;/p&gt;

&lt;h2 id=&quot;puppetdsc-powershell-module-published&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Puppet.Dsc&lt;/code&gt; PowerShell Module Published&lt;/h2&gt;

&lt;p&gt;We also released the first public version of the &lt;a href=&quot;https://github.com/puppetlabs/Puppet.Dsc&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Puppet.Dsc&lt;/code&gt; PowerShell module&lt;/a&gt; to the &lt;a href=&quot;https://www.powershellgallery.com/packages/Puppet.Dsc/0.1.0&quot;&gt;PowerShell Gallery&lt;/a&gt; this week!
This is the initial public follow up to our earlier blog post, &lt;a href=&quot;https://puppetlabs.github.io/iac/news/roadmap/2020/03/30/dsc-announcement.html&quot;&gt;&lt;em&gt;DSC + Puppet: Incoming!&lt;/em&gt;&lt;/a&gt;, wherein we make the cleaned up and tested version of our tool for converting PowerShell modules with DSC Resources into Puppet modules!&lt;/p&gt;

&lt;p&gt;We’ll have a new blog going more in depth on this topic in short order.&lt;/p&gt;

&lt;h2 id=&quot;dishas-week-3-update&quot;&gt;Disha’s Week 3 Update&lt;/h2&gt;

&lt;p&gt;I had a very busy and productive week 3 at &lt;a href=&quot;https://puppet.com/&quot;&gt;Puppet&lt;/a&gt;. I started off my week 3 with the IDEA Working Group, where we discussed what to do with the upcoming events such as &lt;a href=&quot;https://www.womenwhocode.com/&quot;&gt;Women Who Code&lt;/a&gt; taking opinions of existing interns of how they applied to Puppet for their placement year and if there was anything that can be improved.On the same day, I started to work on &lt;a href=&quot;https://learnrubythehardway.org/book/&quot;&gt;Learn Ruby The Hard Way&lt;/a&gt;
During the week, I continued to work on this tutorial when I was free and so far made great progress. Later on in the week, I had some very interesting and enjoyable sessions of training. I had two sessions on &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;  training which was a high-level introduction, covering things like:-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part I:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What is SCM?   Namespaces: puppetlabs, forks, etc&lt;/li&gt;
  &lt;li&gt;Cloning a repo, pulling&lt;/li&gt;
  &lt;li&gt;Creating a branch&lt;/li&gt;
  &lt;li&gt;Adding, Commit and Removing etc&lt;/li&gt;
  &lt;li&gt;How to create good commits (tagging with JIRA IDs, atomic commits, etc)&lt;/li&gt;
  &lt;li&gt;Resolving conflicts (quick overview: working on a code repo with
multiple collaborators / contributors)&lt;/li&gt;
  &lt;li&gt;Pushing branches&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Part II:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Push/pull destinations (e.g. upstream, origin, forks, etc)&lt;/li&gt;
  &lt;li&gt;Creating a PR&lt;/li&gt;
  &lt;li&gt;Code review basics (+ labelling)&lt;/li&gt;
  &lt;li&gt;Rebasing
Getting out of trouble (removing commits, rewriting commits, resetting branches)&lt;/li&gt;
  &lt;li&gt;Force pushing and how to cautiously use it!&lt;/li&gt;
  &lt;li&gt;Github issues and how to link to them in commits/PRs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During this session, I worked with &lt;a href=&quot;https://github.com/sanfrancrisko&quot;&gt;Ciaran&lt;/a&gt; and &lt;a href=&quot;https://github.com/daianamezdrea&quot;&gt;Daiana&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have also started my training on &lt;a href=&quot;https://github.com/puppetlabs/pdksync&quot;&gt;PDKSync and Gem Testing&lt;/a&gt; with &lt;a href=&quot;https://github.com/sheenaajay&quot;&gt;Sheena&lt;/a&gt;. Check out the blogs on &lt;a href=&quot;https://puppet.com/blog/walkthrough-pdksync/&quot;&gt;PDKSync&lt;/a&gt;. The session will be continued on Monday to complete the remaining training. In this session, the following topics were covered:-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part I:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Overview of pdksync Tool&lt;/li&gt;
  &lt;li&gt;How to create GITHub token and add to puppetlabs org&lt;/li&gt;
  &lt;li&gt;How do we clone, make changes, commit, push and create PR using pdksync.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After completing the session with &lt;a href=&quot;https://github.com/sheenaajay&quot;&gt;Sheena&lt;/a&gt;, I then worked with &lt;a href=&quot;https://github.com/carabasdaniel&quot;&gt;Daniel&lt;/a&gt; to sort out the issue with Learning VM certificates signing and verification. I would like to say thanks to &lt;a href=&quot;https://github.com/carabasdaniel&quot;&gt;Daniel&lt;/a&gt; for all his help yesterday. I will continue this training once I have finished the Ruby &lt;a href=&quot;https://learnrubythehardway.org/book/&quot;&gt;tutorials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, on Friday I attended a session with Caoimhe to give her an overview of how to use the &lt;a href=&quot;https://virtualcareersfairs.qub.ac.uk/events&quot;&gt;Queen’s University Belfast&lt;/a&gt; Virtual Events Page for the Graduate and Placement Fair 2020 taking place virtually this October.
We hope to see the QUB students at the virtual fair in this October!
After the session with Caoimhe, I attended the weekly Belfast’s Wrap Up Session.
I also attended a zoom call with &lt;a href=&quot;https://github.com/jcoconnor&quot;&gt;John O’ Connor&lt;/a&gt; where he gave me an overview of the what the Development Infrastructure Operations is and what they do! Thanks for such an informative session &lt;a href=&quot;https://github.com/jcoconnor&quot;&gt;John O’Connor&lt;/a&gt; on &lt;a href=&quot;https://puppet.grafana.net/login&quot;&gt;Grafana&lt;/a&gt;, ABS, Mesos and Puppet Tech Tools Registry.
That’s all for this week from me!
Happy reading!!&lt;/p&gt;</content><author><name>sanfrancrisko</name></author><category term="team" /><category term="status" /><category term="translate" /><category term="concat" /><category term="apt" /><category term="haproxy" /><category term="bolt" /><category term="smoke tests" /><summary type="html">Hello folks! Hope this Friday finds you all well? Here’s an update from the IAC Team for the week that was:</summary></entry><entry><title type="html">11th September 2020: IAC Team Status Update</title><link href="https://puppetlabs.github.io/iac/team/status/2020/09/11/status-update.html" rel="alternate" type="text/html" title="11th September 2020: IAC Team Status Update" /><published>2020-09-11T00:00:00+00:00</published><updated>2020-09-11T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/team/status/2020/09/11/status-update</id><content type="html" xml:base="https://puppetlabs.github.io/iac/team/status/2020/09/11/status-update.html">&lt;p&gt;Hi everybody!
Here’s an update from the IAC Team for the week that was.
It’s worth mentioning that it has been quite an eventful week with some unexpected fires, here and there.
Nothing we and our wonderful Puppet colleagues can’t get on top of, but, worth highlighting as this week’s update may be a little light!
We’ll divulge more details in due course, after we’re on top of the fixes.&lt;/p&gt;

&lt;p&gt;Speaking of fires, we hope that any of our Community members and Puppet colleagues on the US West Coast are keeping safe at the moment and that life hasn’t been impacted too adversely with the wildfires coarsing through many parts of California, Washington and of course, our HQ’s home state of Oregon.&lt;/p&gt;

&lt;p&gt;Stay safe!&lt;/p&gt;

&lt;h2 id=&quot;welcome-back-david&quot;&gt;Welcome Back David!&lt;/h2&gt;
&lt;p&gt;Many of you in the Community (and of course, Puppet!) will know who &lt;a href=&quot;https://github.com/DavidS&quot;&gt;David&lt;/a&gt; is - he is definitely one of the most integral members of both the Community and Puppet, interally.
&lt;a href=&quot;https://github.com/DavidS&quot;&gt;David&lt;/a&gt; had to take some time away back in July - we mentioned this in our &lt;a href=&quot;https://puppetlabs.github.io/iac/team/status/2020/07/17/status-update.html&quot;&gt;2020-07-17 blog post&lt;/a&gt;.
We’re &lt;em&gt;extremely&lt;/em&gt; happy to be able to formally welcome &lt;a href=&quot;https://github.com/DavidS&quot;&gt;David&lt;/a&gt; back - for the two months or so you were away, it certainly highlighted how pivotal you are to the IAC Team!&lt;/p&gt;

&lt;p&gt;I’m sure everyone in the wider Puppet Community are also glad to see you back too! :)&lt;/p&gt;

&lt;h2 id=&quot;module-releases-from-iac-team&quot;&gt;Module Releases from IAC Team&lt;/h2&gt;
&lt;p&gt;We have two modules released this week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-inifile&quot;&gt;puppetlabs-inifile&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.4.3.0&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-ntp&quot;&gt;puppetlabs-ntp&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.8.4.0&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;community-contributions&quot;&gt;Community Contributions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-apache/pull/2063&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppetlabs-apache#2063&lt;/code&gt;&lt;/a&gt;: We’d lke to thank &lt;a href=&quot;https://github.com/nbarrientos&quot;&gt;nbarrientos&lt;/a&gt; for his fix that ensures the correct default shared lib path for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mod_wsgi&lt;/code&gt; on RHEL 8.
The responsiveness was very much appreciated by the team - a pleasure working with you!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;puppet-7--ruby-27-testing&quot;&gt;Puppet 7 &amp;amp; Ruby 2.7 Testing&lt;/h2&gt;
&lt;p&gt;We continue to expand the integration testing effort of the Puppet 7 nightly builds against our core, &lt;a href=&quot;/iac/modules/&quot;&gt;supported modules&lt;/a&gt;.
Thanks to &lt;a href=&quot;https://github.com/sheenaajay&quot;&gt;Sheena&lt;/a&gt; and &lt;a href=&quot;https://www.linkedin.com/in/norman-heaney-b52bb5&quot;&gt;Norman&lt;/a&gt; for leading the test effort whilst I was out on vacation.&lt;/p&gt;

&lt;h2 id=&quot;dishas-second-week&quot;&gt;Disha’s Second Week&lt;/h2&gt;
&lt;p&gt;We didn’t scare &lt;a href=&quot;https://github.com/disha-maker&quot;&gt;Disha&lt;/a&gt; off, by the looks of things, so we must be doing something right :)
&lt;a href=&quot;https://github.com/disha-maker&quot;&gt;Disha&lt;/a&gt; has been working through some training material set out by the team and here’s how she’s been getting on so far, in her own words:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I am currently working on the learning VM quest guide with &lt;a href=&quot;https://github.com/pmcmaw&quot;&gt;Paula&lt;/a&gt;, &lt;a href=&quot;https://github.com/daianamezdrea&quot;&gt;Daiana&lt;/a&gt; and &lt;a href=&quot;https://github.com/sanfrancrisko&quot;&gt;Ciaran&lt;/a&gt; to solve an issue for verifying certificates. 
  We hope to get this issue resolved soon so that I can continue with the learning VM training. 
  The link to the Quest Guide for the Puppet Learning VM is &lt;a href=&quot;https://github.com/puppetlabs/puppet-quest-guide&quot;&gt;here&lt;/a&gt;.
  I also had a quick session with &lt;a href=&quot;https://github.com/sanfrancrisko&quot;&gt;Ciaran&lt;/a&gt; to learn markdown language for writing weekly team blogs. 
  I will be exploring markdown language via this &lt;a href=&quot;https://www.markdowntutorial.com/&quot;&gt;tutorial&lt;/a&gt; provided by &lt;a href=&quot;https://github.com/sanfrancrisko&quot;&gt;Ciaran&lt;/a&gt;. 
  There will be a dedicated training session on markdown language in the coming weeks.&lt;br /&gt;
  Thank you to the team of IAC for helping me this week in the training sessions! 
  I am now looking forward to next week and all the exciting stuff to learn.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap Up&lt;/h2&gt;
&lt;p&gt;Glad to have you on board &lt;a href=&quot;https://github.com/disha-maker&quot;&gt;Disha&lt;/a&gt; and great to see you progressing really well in such a short space of time! :)&lt;/p&gt;

&lt;p&gt;That’s all for this week from the IAC Team! Stay safe!&lt;/p&gt;</content><author><name>sanfrancrisko</name></author><category term="team" /><category term="status" /><category term="releases" /><category term="shoutouts" /><category term="apache" /><category term="inifile" /><category term="newstart" /><category term="learningvm" /><summary type="html">Hi everybody! Here’s an update from the IAC Team for the week that was. It’s worth mentioning that it has been quite an eventful week with some unexpected fires, here and there. Nothing we and our wonderful Puppet colleagues can’t get on top of, but, worth highlighting as this week’s update may be a little light! We’ll divulge more details in due course, after we’re on top of the fixes.</summary></entry><entry><title type="html">4th September 2020: IAC Team Status Update</title><link href="https://puppetlabs.github.io/iac/team/status/2020/09/04/status-update.html" rel="alternate" type="text/html" title="4th September 2020: IAC Team Status Update" /><published>2020-09-04T00:00:00+00:00</published><updated>2020-09-04T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/team/status/2020/09/04/status-update</id><content type="html" xml:base="https://puppetlabs.github.io/iac/team/status/2020/09/04/status-update.html">&lt;p&gt;The IAC team has been active over the past week.
We worked on releasing modules and also reviewing contributions from the community.
Here’s a resume of the most cool things:&lt;/p&gt;

&lt;h2 id=&quot;module-releases-from-iac-team&quot;&gt;Module Releases from IAC Team&lt;/h2&gt;

&lt;p&gt;We’ve had a few modules released this week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-kubernetes&quot;&gt;puppetlabs/kubernetes&lt;/a&gt; (v5.3.0)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;community-contributions&quot;&gt;Community Contributions&lt;/h2&gt;

&lt;p&gt;We’d like to thank the fantastic Puppet Community for the following contributions over the past week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-kubernetes&quot;&gt;puppetlabs/puppetlabs-kubernetes&lt;/a&gt;: Thanks to &lt;a href=&quot;https://github.com/JasonWhall&quot;&gt;Jason Whall&lt;/a&gt; for this &lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-kubernetes/pull/436&quot;&gt;change&lt;/a&gt; which updates docker yumrepo default .&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-accounts&quot;&gt;puppetlabs/puppetlabs-accounts&lt;/a&gt;: Thanks to &lt;a href=&quot;https://github.com/jarretlavallee&quot;&gt;Jarret Lavallee&lt;/a&gt; for this &lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-accounts/pull/333&quot;&gt;change&lt;/a&gt; which allow for Sensitive type passwords in accounts::user .&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dsc-user-testing&quot;&gt;DSC User Testing&lt;/h3&gt;

&lt;p&gt;With the last of the major technical hurdles out of the way, the PowerShell DSC Puppetizer is ready for another wave of user testing.
&lt;a href=&quot;https://github.com/joeypiccola&quot;&gt;Joey Piccola&lt;/a&gt; reached out to offer some help with testing (thanks, Joey!) and we were quickly able to Puppetize and send over both ActiveDirectoryDsc and xFailOverCluster - putting almost 30 puppetized DSC resources into his hands in mere minutes!
Not only have the build times slimmed dramatically, but the packaged size of these modules is &lt;em&gt;tiny&lt;/em&gt;, under 150kB each!
If you’re interested in participating in our beta testing program, you can reach out to us at &lt;a href=&quot;mailto:dsc@puppet.com&quot;&gt;dsc@puppet.com&lt;/a&gt;!&lt;/p&gt;

&lt;h3 id=&quot;welcome-to-the-team&quot;&gt;Welcome to the Team&lt;/h3&gt;

&lt;p&gt;We want to announce to you that &lt;a href=&quot;https://github.com/disha-maker&quot;&gt;Disha Kareer&lt;/a&gt; is the newest member of the IAC Team.
&lt;a href=&quot;https://github.com/disha-maker&quot;&gt;Disha&lt;/a&gt; is Undergraduate student studying BSc Computing and Information Technology including Professional Experience.
She enjoys volunteering and meeting new people.
She will help us to fulfill the IAC Team noble mission.&lt;/p&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap-up&lt;/h2&gt;

&lt;p&gt;That’s it for this weeks update, a big THANK YOU for all your contributions and support.&lt;/p&gt;</content><author><name>adrianiurca</name></author><category term="team" /><category term="status" /><category term="releases" /><category term="shoutouts" /><category term="kubernetes" /><category term="welcome" /><category term="team work" /><summary type="html">The IAC team has been active over the past week. We worked on releasing modules and also reviewing contributions from the community. Here’s a resume of the most cool things:</summary></entry><entry><title type="html">28th August 2020: IAC Team Status Update</title><link href="https://puppetlabs.github.io/iac/team/status/2020/08/28/status-update.html" rel="alternate" type="text/html" title="28th August 2020: IAC Team Status Update" /><published>2020-08-28T00:00:00+00:00</published><updated>2020-08-28T00:00:00+00:00</updated><id>https://puppetlabs.github.io/iac/team/status/2020/08/28/status-update</id><content type="html" xml:base="https://puppetlabs.github.io/iac/team/status/2020/08/28/status-update.html">&lt;p&gt;The IAC team has been working on a lot of things over the past week.
We want to share with our community some of the most interesting things.
Here’s a brief overview of what we’ve been up to:&lt;/p&gt;

&lt;h2 id=&quot;module-releases-from-iac-team&quot;&gt;Module Releases from IAC Team&lt;/h2&gt;
&lt;p&gt;We’ve had a few modules released this week:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-chocolatey&quot;&gt;puppetlabs/chocolatey&lt;/a&gt; (v5.1.1)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-scheduled_task&quot;&gt;puppetlabs/scheduled_task&lt;/a&gt; (v2.2.1)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-tomcat&quot;&gt;puppetlabs/tomcat&lt;/a&gt; (v4.2.0)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-postgresql&quot;&gt;puppetlabs/postgresql&lt;/a&gt; (v6.7.0)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;puppet-module-gems&quot;&gt;puppet-module-gems&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v0.5.1&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppet-module-gems&lt;/code&gt; for Ruby 2.7 on Windows has been uploaded to &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;litmus&quot;&gt;Litmus&lt;/h2&gt;
&lt;p&gt;Litmus was broken due to the following &lt;a href=&quot;https://github.com/puppetlabs/bolt/issues/2117&quot;&gt;issue&lt;/a&gt;.
Thanks alot to the bolt team for the quick turn around and release of &lt;a href=&quot;https://rubygems.org/gems/bolt&quot;&gt;2.25.0&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;community-contributions&quot;&gt;Community Contributions&lt;/h2&gt;
&lt;p&gt;We’d like to thank the fantastic Puppet Community for the following contributions over the past week:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-accounts&quot;&gt;puppetlabs/puppetlabs-accounts&lt;/a&gt;: Thanks to &lt;a href=&quot;https://github.com/jarretlavallee&quot;&gt;Jarret Lavallee&lt;/a&gt; for this &lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-accounts/pull/333&quot;&gt;change&lt;/a&gt; which allows for sensitive type passwords in accounts::user .&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/provision&quot;&gt;puppetlabs/provision&lt;/a&gt;: &lt;a href=&quot;https://github.com/dylanratcliffe&quot;&gt;Dylan&lt;/a&gt; for this &lt;a href=&quot;https://github.com/puppetlabs/provision/pull/94&quot;&gt;fix&lt;/a&gt; to ensure that conflict detection works as anticipated when boxes have a slash in their name.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-docker&quot;&gt;puppetlabs/puppetlabs-docker&lt;/a&gt;: &lt;a href=&quot;https://github.com/quentins&quot;&gt;Quentin&lt;/a&gt; for this &lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-docker/pull/653&quot;&gt;fix&lt;/a&gt; which fix syntax for puppet 4 support.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-docker&quot;&gt;puppetlabs/puppetlabs-docker&lt;/a&gt;: &lt;a href=&quot;https://github.com/koubas&quot;&gt;Jakub Husák&lt;/a&gt; for this &lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-docker/pull/653&quot;&gt;change&lt;/a&gt; which add prepare_service_only param to ::run resource.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Shout out to &lt;a href=&quot;https://github.com/kreeuwijk&quot;&gt;Kevin Reeuwijk&lt;/a&gt; for reporting the ticket, &lt;a href=&quot;https://tickets.puppetlabs.com/browse/MODULES-10783&quot;&gt;MODULES-10783&lt;/a&gt; has now been resolved and released also thanks for your cooperation and help when working through the module self service process.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Shout out to &lt;a href=&quot;https://github.com/sanfrancrisko&quot;&gt;Ciaran&lt;/a&gt; and &lt;a href=&quot;https://github.com/david22swan&quot;&gt;David&lt;/a&gt; for the quick turn around on the fixes for &lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-scheduled_task&quot;&gt;puppetlabs/puppetlabs-scheduled_task&lt;/a&gt;. Both the bugs are fixed and released.
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-scheduled_task/pull/161&quot;&gt;fix1&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/puppetlabs/puppetlabs-scheduled_task/pull/158&quot;&gt;fix2&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;puppet-7&quot;&gt;Puppet 7&lt;/h2&gt;
&lt;p&gt;Puppet 7 testing is ongoing. Platforms currently tested for the nightly builds are CentOS7, Debian10, RHEL8, SLES15, Ubuntu20.04, WinServ2012R2, WinServ2016, Win Serv2019. Subset of acceptance tests, tagged with the “integration” label against the latest Puppet 7 nightly build.&lt;/p&gt;

&lt;h2 id=&quot;dsc-builder-nearing-testing&quot;&gt;DSC Builder Nearing Testing&lt;/h2&gt;
&lt;p&gt;The tickets closed out this week represent the last technical implementation blockers for this phase of the project, everything else is documentation, testing, and user feedback! We’re nearing a launch of the PowerShell module to the &lt;a href=&quot;https://powershellgallery.com&quot;&gt;public Gallery&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;time-for-holiday&quot;&gt;Time for holiday&lt;/h2&gt;
&lt;p&gt;As no summer can end without a holiday, our team member &lt;a href=&quot;https://github.com/sanfrancrisko&quot;&gt;Ciaran&lt;/a&gt; will have a short PTO for recharging the batteries and prepare for a new season of fixing bugs!&lt;/p&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap-up&lt;/h2&gt;
&lt;p&gt;That’s it for this weeks update, a big THANK YOU for all your contributions and support.&lt;/p&gt;</content><author><name>sheenaajay</name></author><category term="team" /><category term="status" /><category term="releases" /><category term="shoutouts" /><category term="acl" /><category term="accounts" /><category term="motd" /><category term="stdlib" /><category term="puppet-module-gems" /><category term="holiday time" /><category term="team work" /><summary type="html">The IAC team has been working on a lot of things over the past week. We want to share with our community some of the most interesting things. Here’s a brief overview of what we’ve been up to:</summary></entry></feed>